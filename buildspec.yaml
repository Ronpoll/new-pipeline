version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo "=== INSTALLING DEPENDENCIES ==="
      - pip install --upgrade pip
      - pip install cfn-lint bandit
      - echo "Dependencies installed successfully."

  pre_build:
    commands:
      - echo "=== VALIDATING CLOUDFORMATION TEMPLATES ==="
      # Validate all YAML templates
      - for file in $(find . -name "*.yaml" -o -name "*.yml" | grep -v buildspec.yaml); do
          echo "Validating $file...";
          aws cloudformation validate-template --template-body file://$file || exit 1;
        done
      - echo "CloudFormation syntax validation complete."

  build:
    commands:
      - echo "=== RUNNING SECURITY AND LINTING SCANS ==="
      # Run linting
      - for file in $(find . -name "*.yaml" -o -name "*.yml" | grep -v buildspec.yaml); do
          echo "Linting $file...";
          cfn-lint $file || exit 1;
        done
      # Run security scanning with cfn-nag
      - for file in $(find . -name "*.yaml" -o -name "*.yml" | grep -v buildspec.yaml); do
          echo "Security scanning $file...";
          cfn-nag-scan --input-path $file || exit 1;
        done
      # Optional: run Bandit to detect suspicious Python code
      - if [ -d "src" ]; then
          echo "Running Bandit security scan on Python code...";
          bandit -r src || exit 1;
        fi
      - echo "All templates and code passed validation!"

  post_build:
    commands:
      - echo "=== PACKAGING BUILD ARTIFACTS ==="
      - mkdir -p output
      - cp -r *.yaml output/ || true
      - echo "Build completed successfully and artifacts packaged."

artifacts:
  files:
    - output/**/*
  discard-paths: no
