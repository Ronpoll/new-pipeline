version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo "=== INSTALLING DEPENDENCIES ==="
      - pip install --upgrade pip
      - pip install cfn-lint bandit
      - echo "Dependencies installed successfully."

  pre_build:
    commands:
      - echo "=== VALIDATING CLOUDFORMATION TEMPLATES ==="
      - |
        for file in $(find . -name "*.yaml" -o -name "*.yml"); do
          echo "Checking if $file looks like a CloudFormation template..."
          if grep -q '^Resources:' "$file"; then
            echo "Validating $file..."
            aws cloudformation validate-template --template-body file://"$file" || exit 1
          else
            echo "Skipping $file (no Resources section detected)"
          fi
        done
      - echo "CloudFormation syntax validation complete."
  
  build:
    commands:
      - echo "=== RUNNING SECURITY AND LINTING SCANS ==="
      - |
        for file in $(find . -name "*.yaml" -o -name "*.yml"); do
          echo "Checking if $file looks like a CloudFormation template..."
          if grep -q '^Resources:' "$file"; then
            echo "Linting $file..."
            cfn-lint "$file" || exit 1
          else
            echo "Skipping $file (no Resources section detected)"
          fi
        done
      - if [ -d "src" ]; then
          echo "Running Bandit security scan on Python source code...";
          bandit -r src || exit 1;
        else
          echo "No src directory found, skipping Python security scan.";
        fi
      - echo "All templates and code passed validation!"


  post_build:
    commands:
      - echo "=== PACKAGING BUILD ARTIFACTS ==="
      - mkdir -p output
      - cp -r *.yaml output/ || true
      - echo "Build completed successfully and artifacts packaged."

artifacts:
  files:
    - output/**/*
  discard-paths: no
