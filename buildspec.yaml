version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo "Installing prerequisites..."
      - aws --version
      - pip install --upgrade pip
      - pip install cfn-lint
      - echo "Installing ClamAV..."
      - |
        # Try yum (Amazon Linux) then apt-get (Debian/Ubuntu)
        if command -v yum >/dev/null 2>&1; then
          yum install -y clamav clamav-update || true
        elif command -v apt-get >/dev/null 2>&1; then
          apt-get update -y && apt-get install -y clamav clamav-freshclam || true
        else
          echo "No supported package manager found; skipping ClamAV install"
        fi
      - echo "Updating ClamAV DB (freshclam) — will fall back to direct download if needed..."
      - |
        if command -v freshclam >/dev/null 2>&1; then
          freshclam || echo "freshclam failed; attempting direct DB download"
        fi
      - |
        # If database still missing, try direct download (useful in restricted envs)
        CLAM_DIR="/var/lib/clamav"
        mkdir -p "${CLAM_DIR}"
        if [ ! -f "${CLAM_DIR}/main.cvd" ] && [ ! -f "${CLAM_DIR}/daily.cvd" ]; then
          echo "Attempting to fetch CVD files directly..."
          curl -sfS --retry 3 https://database.clamav.net/main.cvd -o "${CLAM_DIR}/main.cvd" || true
          curl -sfS --retry 3 https://database.clamav.net/daily.cvd -o "${CLAM_DIR}/daily.cvd" || true
        fi
      - echo "Environment setup complete."

  build:
    commands:
      - echo "Starting build phase..."
      - echo "Running CloudFormation linter..."
      - cfn-lint -t root.yaml || true

      - echo "Running malware scan with ClamAV (will fail the build if infections detected)..."
      - |
        # run a recursive scan of the source dir
        if command -v clamscan >/dev/null 2>&1; then
          clamscan -r --bell -i .
          scan_status=$?
          # clamscan returns: 0 = no virus, 1 = virus(es) found, >1 = error
          if [ $scan_status -eq 1 ]; then
            echo "❌ Malware detected by clamscan — failing the build."
            exit 1
          elif [ $scan_status -gt 1 ]; then
            echo "❌ clamscan error (status=$scan_status) — failing the build."
            exit 1
          else
            echo "✅ No malware found."
          fi
        else
          echo "⚠️ clamscan not available — skipping malware scan (this may be a security risk)."
        fi

      - echo "Cleaning old artifacts from $ARTIFACT_BUCKET..."
      - aws s3 rm "s3://$ARTIFACT_BUCKET" --recursive || true

      - echo "Packaging CloudFormation templates..."
      - |
        if [ -z "$ARTIFACT_BUCKET" ]; then
          echo "ERROR: ARTIFACT_BUCKET variable is not set."
          exit 1
        fi
        echo "Using artifact bucket: $ARTIFACT_BUCKET"
        aws cloudformation package \
          --template-file root.yaml \
          --s3-bucket "$ARTIFACT_BUCKET" \
          --output-template-file packaged.yaml

      - echo "Verifying packaged.yaml exists..."
      - test -f packaged.yaml && echo "Packaging complete." || (echo "packaged.yaml missing!" && exit 1)

artifacts:
  files:
    - packaged.yaml
    - "*.yaml"

cache:
  paths:
    - '/root/.cache/pip/**/*'
