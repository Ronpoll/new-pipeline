AWSTemplateFormatVersion: "2010-09-09"
Description: Private EC2 instance with SSM access and Apache homepage rendering instance metadata every minute.

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
  SubnetId:
    Type: AWS::EC2::Subnet::Id
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
  InstanceType:
    Type: String
    Default: t3.micro
  KeyName:
    Type: String
    Default: ""
    Description: Optional. Leave empty to rely only on SSM (no SSH).
  LatestAmiId:
    Type: AWS::EC2::Image::Id

Conditions:
  HasKeyName: !Not [!Equals [!Ref KeyName, ""]]

Resources:
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Path: /

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref Role

  WebInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref InstanceProfile
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref SecurityGroupId
      SourceDestCheck: true
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 10
            VolumeType: gp3
            DeleteOnTermination: true
      Tags:
        - Key: Name
          Value: PrivateWeb
      UserData:
  Fn::Base64: |
    #!/bin/bash -xe
    dnf -y update
    dnf -y install httpd
    systemctl enable --now httpd
    systemctl enable --now amazon-ssm-agent || true

    echo OK > /var/www/html/health.html

    cat >/usr/local/bin/render-meta.sh <<'SH'
    #!/bin/bash
    set -euo pipefail
    TOKEN=$(curl -sX PUT "http://169.254.169.254/latest/api/token" \
             -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
    IID=$(curl -sH "X-aws-ec2-metadata-token: \$TOKEN" \
             http://169.254.169.254/latest/meta-data/instance-id)
    AZ=$(curl -sH "X-aws-ec2-metadata-token: \$TOKEN" \
             http://169.254.169.254/latest/meta-data/placement/availability-zone)
    IP=$(hostname -I | awk '{print \$1}')

    cat >/var/www/html/index.html <<'HTML'
    <!doctype html>
    <html><body>
    <h1>Private EC2 Metadata</h1>
    <p>Instance ID: \$IID</p>
    <p>Availability Zone: \$AZ</p>
    <p>Private IP: \$IP</p>
    </body></html>
    HTML
    SH

    chmod +x /usr/local/bin/render-meta.sh
    /usr/local/bin/render-meta.sh

    cat >/etc/systemd/system/render-meta.service <<'UNIT'
    [Unit]
    Description=Render EC2 metadata into /var/www/html/index.html
    [Service]
    Type=oneshot
    ExecStart=/usr/local/bin/render-meta.sh
    UNIT

    cat >/etc/systemd/system/render-meta.timer <<'UNIT'
    [Unit]
    Description=Run render-meta every minute
    [Timer]
    OnBootSec=30s
    OnUnitActiveSec=60s
    Unit=render-meta.service
    [Install]
    WantedBy=timers.target
    UNIT

    systemctl daemon-reload
    systemctl enable --now render-meta.timer


      KeyName: !If [HasKeyName, !Ref KeyName, !Ref "AWS::NoValue"]

Outputs:
  InstanceId:
    Value: !Ref WebInstance
  PrivateIp:
    Value: !GetAtt WebInstance.PrivateIp
